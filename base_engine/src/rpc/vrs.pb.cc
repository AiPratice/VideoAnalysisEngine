// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrs.proto

#include "vrs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace vrs {
namespace rpc {
class DetectObjectInImgRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectObjectInImgRequest>
      _instance;
} _DetectObjectInImgRequest_default_instance_;
class DetectObjectInImgResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectObjectInImgResult>
      _instance;
} _DetectObjectInImgResult_default_instance_;
class DetectPersonInImgRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectPersonInImgRequest>
      _instance;
} _DetectPersonInImgRequest_default_instance_;
class DetectPersonsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectPersonsRequest>
      _instance;
} _DetectPersonsRequest_default_instance_;
class SearchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRequest>
      _instance;
} _SearchRequest_default_instance_;
class SearchResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchResult>
      _instance;
} _SearchResult_default_instance_;
class ProcessVideoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessVideoRequest>
      _instance;
} _ProcessVideoRequest_default_instance_;
class ResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Result>
      _instance;
} _Result_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class DetectPersonInImgResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetectPersonInImgResult>
      _instance;
} _DetectPersonInImgResult_default_instance_;
}  // namespace rpc
}  // namespace vrs
namespace protobuf_vrs_2eproto {
void InitDefaultsDetectObjectInImgRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_DetectObjectInImgRequest_default_instance_;
    new (ptr) ::vrs::rpc::DetectObjectInImgRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::DetectObjectInImgRequest::InitAsDefaultInstance();
}

void InitDefaultsDetectObjectInImgRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectObjectInImgRequestImpl);
}

void InitDefaultsDetectObjectInImgResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_DetectObjectInImgResult_default_instance_;
    new (ptr) ::vrs::rpc::DetectObjectInImgResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::DetectObjectInImgResult::InitAsDefaultInstance();
}

void InitDefaultsDetectObjectInImgResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectObjectInImgResultImpl);
}

void InitDefaultsDetectPersonInImgRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_DetectPersonInImgRequest_default_instance_;
    new (ptr) ::vrs::rpc::DetectPersonInImgRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::DetectPersonInImgRequest::InitAsDefaultInstance();
}

void InitDefaultsDetectPersonInImgRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectPersonInImgRequestImpl);
}

void InitDefaultsDetectPersonsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_DetectPersonsRequest_default_instance_;
    new (ptr) ::vrs::rpc::DetectPersonsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::DetectPersonsRequest::InitAsDefaultInstance();
}

void InitDefaultsDetectPersonsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectPersonsRequestImpl);
}

void InitDefaultsSearchRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_SearchRequest_default_instance_;
    new (ptr) ::vrs::rpc::SearchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::SearchRequest::InitAsDefaultInstance();
}

void InitDefaultsSearchRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchRequestImpl);
}

void InitDefaultsSearchResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_SearchResult_default_instance_;
    new (ptr) ::vrs::rpc::SearchResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::SearchResult::InitAsDefaultInstance();
}

void InitDefaultsSearchResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchResultImpl);
}

void InitDefaultsProcessVideoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_ProcessVideoRequest_default_instance_;
    new (ptr) ::vrs::rpc::ProcessVideoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::ProcessVideoRequest::InitAsDefaultInstance();
}

void InitDefaultsProcessVideoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProcessVideoRequestImpl);
}

void InitDefaultsResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_Result_default_instance_;
    new (ptr) ::vrs::rpc::Result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::Result::InitAsDefaultInstance();
}

void InitDefaultsResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResultImpl);
}

void InitDefaultsEmptyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_Empty_default_instance_;
    new (ptr) ::vrs::rpc::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::Empty::InitAsDefaultInstance();
}

void InitDefaultsEmpty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEmptyImpl);
}

void InitDefaultsDetectPersonInImgResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::vrs::rpc::_DetectPersonInImgResult_default_instance_;
    new (ptr) ::vrs::rpc::DetectPersonInImgResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::vrs::rpc::DetectPersonInImgResult::InitAsDefaultInstance();
}

void InitDefaultsDetectPersonInImgResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetectPersonInImgResultImpl);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgRequest, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, classid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, classname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, prob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectObjectInImgResult, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgRequest, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonsRequest, videoid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::SearchRequest, imgpath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::SearchResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::SearchResult, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::SearchResult, frameid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::ProcessVideoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::ProcessVideoRequest, videoid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::Result, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::Result, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgResult, personid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgResult, top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgResult, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgResult, bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::vrs::rpc::DetectPersonInImgResult, left_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::vrs::rpc::DetectObjectInImgRequest)},
  { 6, -1, sizeof(::vrs::rpc::DetectObjectInImgResult)},
  { 18, -1, sizeof(::vrs::rpc::DetectPersonInImgRequest)},
  { 24, -1, sizeof(::vrs::rpc::DetectPersonsRequest)},
  { 30, -1, sizeof(::vrs::rpc::SearchRequest)},
  { 36, -1, sizeof(::vrs::rpc::SearchResult)},
  { 43, -1, sizeof(::vrs::rpc::ProcessVideoRequest)},
  { 49, -1, sizeof(::vrs::rpc::Result)},
  { 56, -1, sizeof(::vrs::rpc::Empty)},
  { 61, -1, sizeof(::vrs::rpc::DetectPersonInImgResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_DetectObjectInImgRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_DetectObjectInImgResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_DetectPersonInImgRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_DetectPersonsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_SearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_SearchResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_ProcessVideoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::vrs::rpc::_DetectPersonInImgResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "vrs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tvrs.proto\022\007vrs.rpc\"(\n\030DetectObjectInIm"
      "gRequest\022\014\n\004Path\030\001 \001(\t\"\205\001\n\027DetectObjectI"
      "nImgResult\022\017\n\007ClassID\030\001 \001(\r\022\021\n\tClassName"
      "\030\002 \001(\t\022\014\n\004Prob\030\003 \001(\002\022\013\n\003Top\030\004 \001(\005\022\014\n\004Lef"
      "t\030\005 \001(\005\022\r\n\005Width\030\006 \001(\005\022\016\n\006Height\030\007 \001(\005\"("
      "\n\030DetectPersonInImgRequest\022\014\n\004Path\030\001 \001(\t"
      "\"\'\n\024DetectPersonsRequest\022\017\n\007VideoID\030\001 \001("
      "\r\" \n\rSearchRequest\022\017\n\007ImgPath\030\001 \001(\t\".\n\014S"
      "earchResult\022\r\n\005Score\030\001 \001(\002\022\017\n\007FrameID\030\002 "
      "\001(\004\"&\n\023ProcessVideoRequest\022\017\n\007VideoID\030\001 "
      "\001(\r\"#\n\006Result\022\014\n\004Code\030\001 \001(\r\022\013\n\003Msg\030\002 \001(\t"
      "\"\007\n\005Empty\"e\n\027DetectPersonInImgResult\022\020\n\010"
      "PersonID\030\001 \001(\r\022\013\n\003Top\030\002 \001(\005\022\r\n\005Right\030\003 \001"
      "(\005\022\016\n\006Bottom\030\004 \001(\005\022\014\n\004Left\030\005 \001(\0052\262\001\n\006Vrs"
      "Rpc\022;\n\006Search\022\026.vrs.rpc.SearchRequest\032\025."
      "vrs.rpc.SearchResult\"\0000\001\022\?\n\014ProcessVideo"
      "\022\034.vrs.rpc.ProcessVideoRequest\032\017.vrs.rpc"
      ".Result\"\000\022*\n\005Merge\022\016.vrs.rpc.Empty\032\017.vrs"
      ".rpc.Result\"\0002\346\001\n\007FaceRpc\0223\n\016BuildClassi"
      "fer\022\016.vrs.rpc.Empty\032\017.vrs.rpc.Result\"\000\022H"
      "\n\024DetectPersonsInVideo\022\035.vrs.rpc.DetectP"
      "ersonsRequest\032\017.vrs.rpc.Result\"\000\022\\\n\021Dete"
      "ctPersonInImg\022!.vrs.rpc.DetectPersonInIm"
      "gRequest\032 .vrs.rpc.DetectPersonInImgResu"
      "lt\"\0000\0012i\n\tObjectRpc\022\\\n\021DetectObjectInImg"
      "\022!.vrs.rpc.DetectObjectInImgRequest\032 .vr"
      "s.rpc.DetectObjectInImgResult\"\0000\001B\031\n\025edu"
      ".gcu.vrs.rpcserverP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1108);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vrs.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vrs_2eproto
namespace vrs {
namespace rpc {

// ===================================================================

void DetectObjectInImgRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectObjectInImgRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectObjectInImgRequest::DetectObjectInImgRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsDetectObjectInImgRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.DetectObjectInImgRequest)
}
DetectObjectInImgRequest::DetectObjectInImgRequest(const DetectObjectInImgRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.DetectObjectInImgRequest)
}

void DetectObjectInImgRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DetectObjectInImgRequest::~DetectObjectInImgRequest() {
  // @@protoc_insertion_point(destructor:vrs.rpc.DetectObjectInImgRequest)
  SharedDtor();
}

void DetectObjectInImgRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DetectObjectInImgRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectObjectInImgRequest::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectObjectInImgRequest& DetectObjectInImgRequest::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsDetectObjectInImgRequest();
  return *internal_default_instance();
}

DetectObjectInImgRequest* DetectObjectInImgRequest::New(::google::protobuf::Arena* arena) const {
  DetectObjectInImgRequest* n = new DetectObjectInImgRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectObjectInImgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.DetectObjectInImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DetectObjectInImgRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.DetectObjectInImgRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vrs.rpc.DetectObjectInImgRequest.Path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.DetectObjectInImgRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.DetectObjectInImgRequest)
  return false;
#undef DO_
}

void DetectObjectInImgRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.DetectObjectInImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.DetectObjectInImgRequest.Path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.DetectObjectInImgRequest)
}

::google::protobuf::uint8* DetectObjectInImgRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.DetectObjectInImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.DetectObjectInImgRequest.Path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.DetectObjectInImgRequest)
  return target;
}

size_t DetectObjectInImgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.DetectObjectInImgRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectObjectInImgRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.DetectObjectInImgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectObjectInImgRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectObjectInImgRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.DetectObjectInImgRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.DetectObjectInImgRequest)
    MergeFrom(*source);
  }
}

void DetectObjectInImgRequest::MergeFrom(const DetectObjectInImgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.DetectObjectInImgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void DetectObjectInImgRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.DetectObjectInImgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectObjectInImgRequest::CopyFrom(const DetectObjectInImgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.DetectObjectInImgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectObjectInImgRequest::IsInitialized() const {
  return true;
}

void DetectObjectInImgRequest::Swap(DetectObjectInImgRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectObjectInImgRequest::InternalSwap(DetectObjectInImgRequest* other) {
  using std::swap;
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectObjectInImgRequest::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectObjectInImgResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectObjectInImgResult::kClassIDFieldNumber;
const int DetectObjectInImgResult::kClassNameFieldNumber;
const int DetectObjectInImgResult::kProbFieldNumber;
const int DetectObjectInImgResult::kTopFieldNumber;
const int DetectObjectInImgResult::kLeftFieldNumber;
const int DetectObjectInImgResult::kWidthFieldNumber;
const int DetectObjectInImgResult::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectObjectInImgResult::DetectObjectInImgResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsDetectObjectInImgResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.DetectObjectInImgResult)
}
DetectObjectInImgResult::DetectObjectInImgResult(const DetectObjectInImgResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  classname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.classname().size() > 0) {
    classname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classname_);
  }
  ::memcpy(&classid_, &from.classid_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&classid_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.DetectObjectInImgResult)
}

void DetectObjectInImgResult::SharedCtor() {
  classname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&classid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&classid_)) + sizeof(height_));
  _cached_size_ = 0;
}

DetectObjectInImgResult::~DetectObjectInImgResult() {
  // @@protoc_insertion_point(destructor:vrs.rpc.DetectObjectInImgResult)
  SharedDtor();
}

void DetectObjectInImgResult::SharedDtor() {
  classname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DetectObjectInImgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectObjectInImgResult::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectObjectInImgResult& DetectObjectInImgResult::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsDetectObjectInImgResult();
  return *internal_default_instance();
}

DetectObjectInImgResult* DetectObjectInImgResult::New(::google::protobuf::Arena* arena) const {
  DetectObjectInImgResult* n = new DetectObjectInImgResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectObjectInImgResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.DetectObjectInImgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  classname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&classid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&classid_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool DetectObjectInImgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.DetectObjectInImgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ClassID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &classid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ClassName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->classname().data(), static_cast<int>(this->classname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vrs.rpc.DetectObjectInImgResult.ClassName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Prob = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &prob_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Top = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Left = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.DetectObjectInImgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.DetectObjectInImgResult)
  return false;
#undef DO_
}

void DetectObjectInImgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.DetectObjectInImgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ClassID = 1;
  if (this->classid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->classid(), output);
  }

  // string ClassName = 2;
  if (this->classname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classname().data(), static_cast<int>(this->classname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.DetectObjectInImgResult.ClassName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->classname(), output);
  }

  // float Prob = 3;
  if (this->prob() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->prob(), output);
  }

  // int32 Top = 4;
  if (this->top() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->top(), output);
  }

  // int32 Left = 5;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->left(), output);
  }

  // int32 Width = 6;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->width(), output);
  }

  // int32 Height = 7;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.DetectObjectInImgResult)
}

::google::protobuf::uint8* DetectObjectInImgResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.DetectObjectInImgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ClassID = 1;
  if (this->classid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->classid(), target);
  }

  // string ClassName = 2;
  if (this->classname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classname().data(), static_cast<int>(this->classname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.DetectObjectInImgResult.ClassName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->classname(), target);
  }

  // float Prob = 3;
  if (this->prob() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->prob(), target);
  }

  // int32 Top = 4;
  if (this->top() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->top(), target);
  }

  // int32 Left = 5;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->left(), target);
  }

  // int32 Width = 6;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->width(), target);
  }

  // int32 Height = 7;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.DetectObjectInImgResult)
  return target;
}

size_t DetectObjectInImgResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.DetectObjectInImgResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ClassName = 2;
  if (this->classname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->classname());
  }

  // uint32 ClassID = 1;
  if (this->classid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->classid());
  }

  // float Prob = 3;
  if (this->prob() != 0) {
    total_size += 1 + 4;
  }

  // int32 Top = 4;
  if (this->top() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->top());
  }

  // int32 Left = 5;
  if (this->left() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->left());
  }

  // int32 Width = 6;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 Height = 7;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectObjectInImgResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.DetectObjectInImgResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectObjectInImgResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectObjectInImgResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.DetectObjectInImgResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.DetectObjectInImgResult)
    MergeFrom(*source);
  }
}

void DetectObjectInImgResult::MergeFrom(const DetectObjectInImgResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.DetectObjectInImgResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.classname().size() > 0) {

    classname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classname_);
  }
  if (from.classid() != 0) {
    set_classid(from.classid());
  }
  if (from.prob() != 0) {
    set_prob(from.prob());
  }
  if (from.top() != 0) {
    set_top(from.top());
  }
  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void DetectObjectInImgResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.DetectObjectInImgResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectObjectInImgResult::CopyFrom(const DetectObjectInImgResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.DetectObjectInImgResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectObjectInImgResult::IsInitialized() const {
  return true;
}

void DetectObjectInImgResult::Swap(DetectObjectInImgResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectObjectInImgResult::InternalSwap(DetectObjectInImgResult* other) {
  using std::swap;
  classname_.Swap(&other->classname_);
  swap(classid_, other->classid_);
  swap(prob_, other->prob_);
  swap(top_, other->top_);
  swap(left_, other->left_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectObjectInImgResult::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectPersonInImgRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectPersonInImgRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectPersonInImgRequest::DetectPersonInImgRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsDetectPersonInImgRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.DetectPersonInImgRequest)
}
DetectPersonInImgRequest::DetectPersonInImgRequest(const DetectPersonInImgRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.DetectPersonInImgRequest)
}

void DetectPersonInImgRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DetectPersonInImgRequest::~DetectPersonInImgRequest() {
  // @@protoc_insertion_point(destructor:vrs.rpc.DetectPersonInImgRequest)
  SharedDtor();
}

void DetectPersonInImgRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DetectPersonInImgRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectPersonInImgRequest::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectPersonInImgRequest& DetectPersonInImgRequest::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsDetectPersonInImgRequest();
  return *internal_default_instance();
}

DetectPersonInImgRequest* DetectPersonInImgRequest::New(::google::protobuf::Arena* arena) const {
  DetectPersonInImgRequest* n = new DetectPersonInImgRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectPersonInImgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.DetectPersonInImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DetectPersonInImgRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.DetectPersonInImgRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vrs.rpc.DetectPersonInImgRequest.Path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.DetectPersonInImgRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.DetectPersonInImgRequest)
  return false;
#undef DO_
}

void DetectPersonInImgRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.DetectPersonInImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.DetectPersonInImgRequest.Path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.DetectPersonInImgRequest)
}

::google::protobuf::uint8* DetectPersonInImgRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.DetectPersonInImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.DetectPersonInImgRequest.Path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.DetectPersonInImgRequest)
  return target;
}

size_t DetectPersonInImgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.DetectPersonInImgRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectPersonInImgRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.DetectPersonInImgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectPersonInImgRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectPersonInImgRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.DetectPersonInImgRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.DetectPersonInImgRequest)
    MergeFrom(*source);
  }
}

void DetectPersonInImgRequest::MergeFrom(const DetectPersonInImgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.DetectPersonInImgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void DetectPersonInImgRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.DetectPersonInImgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectPersonInImgRequest::CopyFrom(const DetectPersonInImgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.DetectPersonInImgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectPersonInImgRequest::IsInitialized() const {
  return true;
}

void DetectPersonInImgRequest::Swap(DetectPersonInImgRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectPersonInImgRequest::InternalSwap(DetectPersonInImgRequest* other) {
  using std::swap;
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectPersonInImgRequest::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectPersonsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectPersonsRequest::kVideoIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectPersonsRequest::DetectPersonsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsDetectPersonsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.DetectPersonsRequest)
}
DetectPersonsRequest::DetectPersonsRequest(const DetectPersonsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  videoid_ = from.videoid_;
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.DetectPersonsRequest)
}

void DetectPersonsRequest::SharedCtor() {
  videoid_ = 0u;
  _cached_size_ = 0;
}

DetectPersonsRequest::~DetectPersonsRequest() {
  // @@protoc_insertion_point(destructor:vrs.rpc.DetectPersonsRequest)
  SharedDtor();
}

void DetectPersonsRequest::SharedDtor() {
}

void DetectPersonsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectPersonsRequest::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectPersonsRequest& DetectPersonsRequest::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsDetectPersonsRequest();
  return *internal_default_instance();
}

DetectPersonsRequest* DetectPersonsRequest::New(::google::protobuf::Arena* arena) const {
  DetectPersonsRequest* n = new DetectPersonsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectPersonsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.DetectPersonsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  videoid_ = 0u;
  _internal_metadata_.Clear();
}

bool DetectPersonsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.DetectPersonsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 VideoID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &videoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.DetectPersonsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.DetectPersonsRequest)
  return false;
#undef DO_
}

void DetectPersonsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.DetectPersonsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 VideoID = 1;
  if (this->videoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->videoid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.DetectPersonsRequest)
}

::google::protobuf::uint8* DetectPersonsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.DetectPersonsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 VideoID = 1;
  if (this->videoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->videoid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.DetectPersonsRequest)
  return target;
}

size_t DetectPersonsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.DetectPersonsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 VideoID = 1;
  if (this->videoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->videoid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectPersonsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.DetectPersonsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectPersonsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectPersonsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.DetectPersonsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.DetectPersonsRequest)
    MergeFrom(*source);
  }
}

void DetectPersonsRequest::MergeFrom(const DetectPersonsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.DetectPersonsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.videoid() != 0) {
    set_videoid(from.videoid());
  }
}

void DetectPersonsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.DetectPersonsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectPersonsRequest::CopyFrom(const DetectPersonsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.DetectPersonsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectPersonsRequest::IsInitialized() const {
  return true;
}

void DetectPersonsRequest::Swap(DetectPersonsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectPersonsRequest::InternalSwap(DetectPersonsRequest* other) {
  using std::swap;
  swap(videoid_, other->videoid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectPersonsRequest::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequest::kImgPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequest::SearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsSearchRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imgpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imgpath().size() > 0) {
    imgpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imgpath_);
  }
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.SearchRequest)
}

void SearchRequest::SharedCtor() {
  imgpath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:vrs.rpc.SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  imgpath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchRequest::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRequest& SearchRequest::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsSearchRequest();
  return *internal_default_instance();
}

SearchRequest* SearchRequest::New(::google::protobuf::Arena* arena) const {
  SearchRequest* n = new SearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.SearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ImgPath = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imgpath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imgpath().data(), static_cast<int>(this->imgpath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vrs.rpc.SearchRequest.ImgPath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.SearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.SearchRequest)
  return false;
#undef DO_
}

void SearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ImgPath = 1;
  if (this->imgpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imgpath().data(), static_cast<int>(this->imgpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.SearchRequest.ImgPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->imgpath(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.SearchRequest)
}

::google::protobuf::uint8* SearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ImgPath = 1;
  if (this->imgpath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imgpath().data(), static_cast<int>(this->imgpath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.SearchRequest.ImgPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->imgpath(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.SearchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ImgPath = 1;
  if (this->imgpath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imgpath());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.SearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgpath().size() > 0) {

    imgpath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imgpath_);
  }
}

void SearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::Swap(SearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  imgpath_.Swap(&other->imgpath_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResult::kScoreFieldNumber;
const int SearchResult::kFrameIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResult::SearchResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsSearchResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.SearchResult)
}
SearchResult::SearchResult(const SearchResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frameid_, &from.frameid_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&frameid_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.SearchResult)
}

void SearchResult::SharedCtor() {
  ::memset(&frameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&frameid_)) + sizeof(score_));
  _cached_size_ = 0;
}

SearchResult::~SearchResult() {
  // @@protoc_insertion_point(destructor:vrs.rpc.SearchResult)
  SharedDtor();
}

void SearchResult::SharedDtor() {
}

void SearchResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchResult::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResult& SearchResult::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsSearchResult();
  return *internal_default_instance();
}

SearchResult* SearchResult::New(::google::protobuf::Arena* arena) const {
  SearchResult* n = new SearchResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&frameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&frameid_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool SearchResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.SearchResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float Score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 FrameID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.SearchResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.SearchResult)
  return false;
#undef DO_
}

void SearchResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Score = 1;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->score(), output);
  }

  // uint64 FrameID = 2;
  if (this->frameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->frameid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.SearchResult)
}

::google::protobuf::uint8* SearchResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.SearchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float Score = 1;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->score(), target);
  }

  // uint64 FrameID = 2;
  if (this->frameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->frameid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.SearchResult)
  return target;
}

size_t SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.SearchResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 FrameID = 2;
  if (this->frameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->frameid());
  }

  // float Score = 1;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.SearchResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.SearchResult)
    MergeFrom(*source);
  }
}

void SearchResult::MergeFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frameid() != 0) {
    set_frameid(from.frameid());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void SearchResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResult::CopyFrom(const SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResult::IsInitialized() const {
  return true;
}

void SearchResult::Swap(SearchResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResult::InternalSwap(SearchResult* other) {
  using std::swap;
  swap(frameid_, other->frameid_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchResult::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessVideoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessVideoRequest::kVideoIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessVideoRequest::ProcessVideoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsProcessVideoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.ProcessVideoRequest)
}
ProcessVideoRequest::ProcessVideoRequest(const ProcessVideoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  videoid_ = from.videoid_;
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.ProcessVideoRequest)
}

void ProcessVideoRequest::SharedCtor() {
  videoid_ = 0u;
  _cached_size_ = 0;
}

ProcessVideoRequest::~ProcessVideoRequest() {
  // @@protoc_insertion_point(destructor:vrs.rpc.ProcessVideoRequest)
  SharedDtor();
}

void ProcessVideoRequest::SharedDtor() {
}

void ProcessVideoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessVideoRequest::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessVideoRequest& ProcessVideoRequest::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsProcessVideoRequest();
  return *internal_default_instance();
}

ProcessVideoRequest* ProcessVideoRequest::New(::google::protobuf::Arena* arena) const {
  ProcessVideoRequest* n = new ProcessVideoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.ProcessVideoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  videoid_ = 0u;
  _internal_metadata_.Clear();
}

bool ProcessVideoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.ProcessVideoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 VideoID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &videoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.ProcessVideoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.ProcessVideoRequest)
  return false;
#undef DO_
}

void ProcessVideoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.ProcessVideoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 VideoID = 1;
  if (this->videoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->videoid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.ProcessVideoRequest)
}

::google::protobuf::uint8* ProcessVideoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.ProcessVideoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 VideoID = 1;
  if (this->videoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->videoid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.ProcessVideoRequest)
  return target;
}

size_t ProcessVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.ProcessVideoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 VideoID = 1;
  if (this->videoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->videoid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessVideoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.ProcessVideoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessVideoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessVideoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.ProcessVideoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.ProcessVideoRequest)
    MergeFrom(*source);
  }
}

void ProcessVideoRequest::MergeFrom(const ProcessVideoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.ProcessVideoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.videoid() != 0) {
    set_videoid(from.videoid());
  }
}

void ProcessVideoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.ProcessVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessVideoRequest::CopyFrom(const ProcessVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.ProcessVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessVideoRequest::IsInitialized() const {
  return true;
}

void ProcessVideoRequest::Swap(ProcessVideoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessVideoRequest::InternalSwap(ProcessVideoRequest* other) {
  using std::swap;
  swap(videoid_, other->videoid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessVideoRequest::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Result::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result::kCodeFieldNumber;
const int Result::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.Result)
}
Result::Result(const Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.Result)
}

void Result::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0u;
  _cached_size_ = 0;
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:vrs.rpc.Result)
  SharedDtor();
}

void Result::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Result& Result::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsResult();
  return *internal_default_instance();
}

Result* Result::New(::google::protobuf::Arena* arena) const {
  Result* n = new Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0u;
  _internal_metadata_.Clear();
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "vrs.rpc.Result.Msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.Result.Msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.Result)
}

::google::protobuf::uint8* Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // string Msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "vrs.rpc.Result.Msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // uint32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.Result)
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsEmpty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:vrs.rpc.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsEmpty();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetectPersonInImgResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectPersonInImgResult::kPersonIDFieldNumber;
const int DetectPersonInImgResult::kTopFieldNumber;
const int DetectPersonInImgResult::kRightFieldNumber;
const int DetectPersonInImgResult::kBottomFieldNumber;
const int DetectPersonInImgResult::kLeftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectPersonInImgResult::DetectPersonInImgResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_vrs_2eproto::InitDefaultsDetectPersonInImgResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:vrs.rpc.DetectPersonInImgResult)
}
DetectPersonInImgResult::DetectPersonInImgResult(const DetectPersonInImgResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&personid_, &from.personid_,
    static_cast<size_t>(reinterpret_cast<char*>(&left_) -
    reinterpret_cast<char*>(&personid_)) + sizeof(left_));
  // @@protoc_insertion_point(copy_constructor:vrs.rpc.DetectPersonInImgResult)
}

void DetectPersonInImgResult::SharedCtor() {
  ::memset(&personid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&left_) -
      reinterpret_cast<char*>(&personid_)) + sizeof(left_));
  _cached_size_ = 0;
}

DetectPersonInImgResult::~DetectPersonInImgResult() {
  // @@protoc_insertion_point(destructor:vrs.rpc.DetectPersonInImgResult)
  SharedDtor();
}

void DetectPersonInImgResult::SharedDtor() {
}

void DetectPersonInImgResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectPersonInImgResult::descriptor() {
  ::protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetectPersonInImgResult& DetectPersonInImgResult::default_instance() {
  ::protobuf_vrs_2eproto::InitDefaultsDetectPersonInImgResult();
  return *internal_default_instance();
}

DetectPersonInImgResult* DetectPersonInImgResult::New(::google::protobuf::Arena* arena) const {
  DetectPersonInImgResult* n = new DetectPersonInImgResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectPersonInImgResult::Clear() {
// @@protoc_insertion_point(message_clear_start:vrs.rpc.DetectPersonInImgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&personid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&left_) -
      reinterpret_cast<char*>(&personid_)) + sizeof(left_));
  _internal_metadata_.Clear();
}

bool DetectPersonInImgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:vrs.rpc.DetectPersonInImgResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 PersonID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &personid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Bottom = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Left = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:vrs.rpc.DetectPersonInImgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:vrs.rpc.DetectPersonInImgResult)
  return false;
#undef DO_
}

void DetectPersonInImgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:vrs.rpc.DetectPersonInImgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PersonID = 1;
  if (this->personid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->personid(), output);
  }

  // int32 Top = 2;
  if (this->top() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->top(), output);
  }

  // int32 Right = 3;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->right(), output);
  }

  // int32 Bottom = 4;
  if (this->bottom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bottom(), output);
  }

  // int32 Left = 5;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->left(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:vrs.rpc.DetectPersonInImgResult)
}

::google::protobuf::uint8* DetectPersonInImgResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:vrs.rpc.DetectPersonInImgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PersonID = 1;
  if (this->personid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->personid(), target);
  }

  // int32 Top = 2;
  if (this->top() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->top(), target);
  }

  // int32 Right = 3;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->right(), target);
  }

  // int32 Bottom = 4;
  if (this->bottom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bottom(), target);
  }

  // int32 Left = 5;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->left(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vrs.rpc.DetectPersonInImgResult)
  return target;
}

size_t DetectPersonInImgResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vrs.rpc.DetectPersonInImgResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 PersonID = 1;
  if (this->personid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->personid());
  }

  // int32 Top = 2;
  if (this->top() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->top());
  }

  // int32 Right = 3;
  if (this->right() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->right());
  }

  // int32 Bottom = 4;
  if (this->bottom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bottom());
  }

  // int32 Left = 5;
  if (this->left() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->left());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectPersonInImgResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:vrs.rpc.DetectPersonInImgResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DetectPersonInImgResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectPersonInImgResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:vrs.rpc.DetectPersonInImgResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:vrs.rpc.DetectPersonInImgResult)
    MergeFrom(*source);
  }
}

void DetectPersonInImgResult::MergeFrom(const DetectPersonInImgResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vrs.rpc.DetectPersonInImgResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.personid() != 0) {
    set_personid(from.personid());
  }
  if (from.top() != 0) {
    set_top(from.top());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.bottom() != 0) {
    set_bottom(from.bottom());
  }
  if (from.left() != 0) {
    set_left(from.left());
  }
}

void DetectPersonInImgResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:vrs.rpc.DetectPersonInImgResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectPersonInImgResult::CopyFrom(const DetectPersonInImgResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vrs.rpc.DetectPersonInImgResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectPersonInImgResult::IsInitialized() const {
  return true;
}

void DetectPersonInImgResult::Swap(DetectPersonInImgResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectPersonInImgResult::InternalSwap(DetectPersonInImgResult* other) {
  using std::swap;
  swap(personid_, other->personid_);
  swap(top_, other->top_);
  swap(right_, other->right_);
  swap(bottom_, other->bottom_);
  swap(left_, other->left_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectPersonInImgResult::GetMetadata() const {
  protobuf_vrs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vrs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace vrs

// @@protoc_insertion_point(global_scope)
