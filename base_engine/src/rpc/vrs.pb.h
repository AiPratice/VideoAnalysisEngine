// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrs.proto

#ifndef PROTOBUF_vrs_2eproto__INCLUDED
#define PROTOBUF_vrs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_vrs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDetectObjectInImgRequestImpl();
void InitDefaultsDetectObjectInImgRequest();
void InitDefaultsDetectObjectInImgResultImpl();
void InitDefaultsDetectObjectInImgResult();
void InitDefaultsDetectPersonInImgRequestImpl();
void InitDefaultsDetectPersonInImgRequest();
void InitDefaultsDetectPersonsRequestImpl();
void InitDefaultsDetectPersonsRequest();
void InitDefaultsSearchRequestImpl();
void InitDefaultsSearchRequest();
void InitDefaultsSearchResultImpl();
void InitDefaultsSearchResult();
void InitDefaultsProcessVideoRequestImpl();
void InitDefaultsProcessVideoRequest();
void InitDefaultsResultImpl();
void InitDefaultsResult();
void InitDefaultsEmptyImpl();
void InitDefaultsEmpty();
void InitDefaultsDetectPersonInImgResultImpl();
void InitDefaultsDetectPersonInImgResult();
inline void InitDefaults() {
  InitDefaultsDetectObjectInImgRequest();
  InitDefaultsDetectObjectInImgResult();
  InitDefaultsDetectPersonInImgRequest();
  InitDefaultsDetectPersonsRequest();
  InitDefaultsSearchRequest();
  InitDefaultsSearchResult();
  InitDefaultsProcessVideoRequest();
  InitDefaultsResult();
  InitDefaultsEmpty();
  InitDefaultsDetectPersonInImgResult();
}
}  // namespace protobuf_vrs_2eproto
namespace vrs {
namespace rpc {
class DetectObjectInImgRequest;
class DetectObjectInImgRequestDefaultTypeInternal;
extern DetectObjectInImgRequestDefaultTypeInternal _DetectObjectInImgRequest_default_instance_;
class DetectObjectInImgResult;
class DetectObjectInImgResultDefaultTypeInternal;
extern DetectObjectInImgResultDefaultTypeInternal _DetectObjectInImgResult_default_instance_;
class DetectPersonInImgRequest;
class DetectPersonInImgRequestDefaultTypeInternal;
extern DetectPersonInImgRequestDefaultTypeInternal _DetectPersonInImgRequest_default_instance_;
class DetectPersonInImgResult;
class DetectPersonInImgResultDefaultTypeInternal;
extern DetectPersonInImgResultDefaultTypeInternal _DetectPersonInImgResult_default_instance_;
class DetectPersonsRequest;
class DetectPersonsRequestDefaultTypeInternal;
extern DetectPersonsRequestDefaultTypeInternal _DetectPersonsRequest_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class ProcessVideoRequest;
class ProcessVideoRequestDefaultTypeInternal;
extern ProcessVideoRequestDefaultTypeInternal _ProcessVideoRequest_default_instance_;
class Result;
class ResultDefaultTypeInternal;
extern ResultDefaultTypeInternal _Result_default_instance_;
class SearchRequest;
class SearchRequestDefaultTypeInternal;
extern SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;
class SearchResult;
class SearchResultDefaultTypeInternal;
extern SearchResultDefaultTypeInternal _SearchResult_default_instance_;
}  // namespace rpc
}  // namespace vrs
namespace vrs {
namespace rpc {

// ===================================================================

class DetectObjectInImgRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.DetectObjectInImgRequest) */ {
 public:
  DetectObjectInImgRequest();
  virtual ~DetectObjectInImgRequest();

  DetectObjectInImgRequest(const DetectObjectInImgRequest& from);

  inline DetectObjectInImgRequest& operator=(const DetectObjectInImgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectObjectInImgRequest(DetectObjectInImgRequest&& from) noexcept
    : DetectObjectInImgRequest() {
    *this = ::std::move(from);
  }

  inline DetectObjectInImgRequest& operator=(DetectObjectInImgRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectObjectInImgRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectObjectInImgRequest* internal_default_instance() {
    return reinterpret_cast<const DetectObjectInImgRequest*>(
               &_DetectObjectInImgRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DetectObjectInImgRequest* other);
  friend void swap(DetectObjectInImgRequest& a, DetectObjectInImgRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectObjectInImgRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectObjectInImgRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectObjectInImgRequest& from);
  void MergeFrom(const DetectObjectInImgRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectObjectInImgRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:vrs.rpc.DetectObjectInImgRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsDetectObjectInImgRequestImpl();
};
// -------------------------------------------------------------------

class DetectObjectInImgResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.DetectObjectInImgResult) */ {
 public:
  DetectObjectInImgResult();
  virtual ~DetectObjectInImgResult();

  DetectObjectInImgResult(const DetectObjectInImgResult& from);

  inline DetectObjectInImgResult& operator=(const DetectObjectInImgResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectObjectInImgResult(DetectObjectInImgResult&& from) noexcept
    : DetectObjectInImgResult() {
    *this = ::std::move(from);
  }

  inline DetectObjectInImgResult& operator=(DetectObjectInImgResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectObjectInImgResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectObjectInImgResult* internal_default_instance() {
    return reinterpret_cast<const DetectObjectInImgResult*>(
               &_DetectObjectInImgResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DetectObjectInImgResult* other);
  friend void swap(DetectObjectInImgResult& a, DetectObjectInImgResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectObjectInImgResult* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectObjectInImgResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectObjectInImgResult& from);
  void MergeFrom(const DetectObjectInImgResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectObjectInImgResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ClassName = 2;
  void clear_classname();
  static const int kClassNameFieldNumber = 2;
  const ::std::string& classname() const;
  void set_classname(const ::std::string& value);
  #if LANG_CXX11
  void set_classname(::std::string&& value);
  #endif
  void set_classname(const char* value);
  void set_classname(const char* value, size_t size);
  ::std::string* mutable_classname();
  ::std::string* release_classname();
  void set_allocated_classname(::std::string* classname);

  // uint32 ClassID = 1;
  void clear_classid();
  static const int kClassIDFieldNumber = 1;
  ::google::protobuf::uint32 classid() const;
  void set_classid(::google::protobuf::uint32 value);

  // float Prob = 3;
  void clear_prob();
  static const int kProbFieldNumber = 3;
  float prob() const;
  void set_prob(float value);

  // int32 Top = 4;
  void clear_top();
  static const int kTopFieldNumber = 4;
  ::google::protobuf::int32 top() const;
  void set_top(::google::protobuf::int32 value);

  // int32 Left = 5;
  void clear_left();
  static const int kLeftFieldNumber = 5;
  ::google::protobuf::int32 left() const;
  void set_left(::google::protobuf::int32 value);

  // int32 Width = 6;
  void clear_width();
  static const int kWidthFieldNumber = 6;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 Height = 7;
  void clear_height();
  static const int kHeightFieldNumber = 7;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vrs.rpc.DetectObjectInImgResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr classname_;
  ::google::protobuf::uint32 classid_;
  float prob_;
  ::google::protobuf::int32 top_;
  ::google::protobuf::int32 left_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsDetectObjectInImgResultImpl();
};
// -------------------------------------------------------------------

class DetectPersonInImgRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.DetectPersonInImgRequest) */ {
 public:
  DetectPersonInImgRequest();
  virtual ~DetectPersonInImgRequest();

  DetectPersonInImgRequest(const DetectPersonInImgRequest& from);

  inline DetectPersonInImgRequest& operator=(const DetectPersonInImgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectPersonInImgRequest(DetectPersonInImgRequest&& from) noexcept
    : DetectPersonInImgRequest() {
    *this = ::std::move(from);
  }

  inline DetectPersonInImgRequest& operator=(DetectPersonInImgRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectPersonInImgRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectPersonInImgRequest* internal_default_instance() {
    return reinterpret_cast<const DetectPersonInImgRequest*>(
               &_DetectPersonInImgRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DetectPersonInImgRequest* other);
  friend void swap(DetectPersonInImgRequest& a, DetectPersonInImgRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectPersonInImgRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectPersonInImgRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectPersonInImgRequest& from);
  void MergeFrom(const DetectPersonInImgRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectPersonInImgRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:vrs.rpc.DetectPersonInImgRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsDetectPersonInImgRequestImpl();
};
// -------------------------------------------------------------------

class DetectPersonsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.DetectPersonsRequest) */ {
 public:
  DetectPersonsRequest();
  virtual ~DetectPersonsRequest();

  DetectPersonsRequest(const DetectPersonsRequest& from);

  inline DetectPersonsRequest& operator=(const DetectPersonsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectPersonsRequest(DetectPersonsRequest&& from) noexcept
    : DetectPersonsRequest() {
    *this = ::std::move(from);
  }

  inline DetectPersonsRequest& operator=(DetectPersonsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectPersonsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectPersonsRequest* internal_default_instance() {
    return reinterpret_cast<const DetectPersonsRequest*>(
               &_DetectPersonsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DetectPersonsRequest* other);
  friend void swap(DetectPersonsRequest& a, DetectPersonsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectPersonsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectPersonsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectPersonsRequest& from);
  void MergeFrom(const DetectPersonsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectPersonsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 VideoID = 1;
  void clear_videoid();
  static const int kVideoIDFieldNumber = 1;
  ::google::protobuf::uint32 videoid() const;
  void set_videoid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vrs.rpc.DetectPersonsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 videoid_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsDetectPersonsRequestImpl();
};
// -------------------------------------------------------------------

class SearchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.SearchRequest) */ {
 public:
  SearchRequest();
  virtual ~SearchRequest();

  SearchRequest(const SearchRequest& from);

  inline SearchRequest& operator=(const SearchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchRequest(SearchRequest&& from) noexcept
    : SearchRequest() {
    *this = ::std::move(from);
  }

  inline SearchRequest& operator=(SearchRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchRequest* internal_default_instance() {
    return reinterpret_cast<const SearchRequest*>(
               &_SearchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SearchRequest* other);
  friend void swap(SearchRequest& a, SearchRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchRequest& from);
  void MergeFrom(const SearchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ImgPath = 1;
  void clear_imgpath();
  static const int kImgPathFieldNumber = 1;
  const ::std::string& imgpath() const;
  void set_imgpath(const ::std::string& value);
  #if LANG_CXX11
  void set_imgpath(::std::string&& value);
  #endif
  void set_imgpath(const char* value);
  void set_imgpath(const char* value, size_t size);
  ::std::string* mutable_imgpath();
  ::std::string* release_imgpath();
  void set_allocated_imgpath(::std::string* imgpath);

  // @@protoc_insertion_point(class_scope:vrs.rpc.SearchRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr imgpath_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsSearchRequestImpl();
};
// -------------------------------------------------------------------

class SearchResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.SearchResult) */ {
 public:
  SearchResult();
  virtual ~SearchResult();

  SearchResult(const SearchResult& from);

  inline SearchResult& operator=(const SearchResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchResult(SearchResult&& from) noexcept
    : SearchResult() {
    *this = ::std::move(from);
  }

  inline SearchResult& operator=(SearchResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchResult* internal_default_instance() {
    return reinterpret_cast<const SearchResult*>(
               &_SearchResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SearchResult* other);
  friend void swap(SearchResult& a, SearchResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResult& from);
  void MergeFrom(const SearchResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 FrameID = 2;
  void clear_frameid();
  static const int kFrameIDFieldNumber = 2;
  ::google::protobuf::uint64 frameid() const;
  void set_frameid(::google::protobuf::uint64 value);

  // float Score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:vrs.rpc.SearchResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 frameid_;
  float score_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsSearchResultImpl();
};
// -------------------------------------------------------------------

class ProcessVideoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.ProcessVideoRequest) */ {
 public:
  ProcessVideoRequest();
  virtual ~ProcessVideoRequest();

  ProcessVideoRequest(const ProcessVideoRequest& from);

  inline ProcessVideoRequest& operator=(const ProcessVideoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcessVideoRequest(ProcessVideoRequest&& from) noexcept
    : ProcessVideoRequest() {
    *this = ::std::move(from);
  }

  inline ProcessVideoRequest& operator=(ProcessVideoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessVideoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessVideoRequest* internal_default_instance() {
    return reinterpret_cast<const ProcessVideoRequest*>(
               &_ProcessVideoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ProcessVideoRequest* other);
  friend void swap(ProcessVideoRequest& a, ProcessVideoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcessVideoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ProcessVideoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProcessVideoRequest& from);
  void MergeFrom(const ProcessVideoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProcessVideoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 VideoID = 1;
  void clear_videoid();
  static const int kVideoIDFieldNumber = 1;
  ::google::protobuf::uint32 videoid() const;
  void set_videoid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vrs.rpc.ProcessVideoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 videoid_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsProcessVideoRequestImpl();
};
// -------------------------------------------------------------------

class Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.Result) */ {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Result(Result&& from) noexcept
    : Result() {
    *this = ::std::move(from);
  }

  inline Result& operator=(Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Result* internal_default_instance() {
    return reinterpret_cast<const Result*>(
               &_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Result* other);
  friend void swap(Result& a, Result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Result* New() const PROTOBUF_FINAL { return New(NULL); }

  Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // uint32 Code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vrs.rpc.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint32 code_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsResultImpl();
};
// -------------------------------------------------------------------

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:vrs.rpc.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsEmptyImpl();
};
// -------------------------------------------------------------------

class DetectPersonInImgResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vrs.rpc.DetectPersonInImgResult) */ {
 public:
  DetectPersonInImgResult();
  virtual ~DetectPersonInImgResult();

  DetectPersonInImgResult(const DetectPersonInImgResult& from);

  inline DetectPersonInImgResult& operator=(const DetectPersonInImgResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectPersonInImgResult(DetectPersonInImgResult&& from) noexcept
    : DetectPersonInImgResult() {
    *this = ::std::move(from);
  }

  inline DetectPersonInImgResult& operator=(DetectPersonInImgResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectPersonInImgResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectPersonInImgResult* internal_default_instance() {
    return reinterpret_cast<const DetectPersonInImgResult*>(
               &_DetectPersonInImgResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(DetectPersonInImgResult* other);
  friend void swap(DetectPersonInImgResult& a, DetectPersonInImgResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectPersonInImgResult* New() const PROTOBUF_FINAL { return New(NULL); }

  DetectPersonInImgResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DetectPersonInImgResult& from);
  void MergeFrom(const DetectPersonInImgResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DetectPersonInImgResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 PersonID = 1;
  void clear_personid();
  static const int kPersonIDFieldNumber = 1;
  ::google::protobuf::uint32 personid() const;
  void set_personid(::google::protobuf::uint32 value);

  // int32 Top = 2;
  void clear_top();
  static const int kTopFieldNumber = 2;
  ::google::protobuf::int32 top() const;
  void set_top(::google::protobuf::int32 value);

  // int32 Right = 3;
  void clear_right();
  static const int kRightFieldNumber = 3;
  ::google::protobuf::int32 right() const;
  void set_right(::google::protobuf::int32 value);

  // int32 Bottom = 4;
  void clear_bottom();
  static const int kBottomFieldNumber = 4;
  ::google::protobuf::int32 bottom() const;
  void set_bottom(::google::protobuf::int32 value);

  // int32 Left = 5;
  void clear_left();
  static const int kLeftFieldNumber = 5;
  ::google::protobuf::int32 left() const;
  void set_left(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vrs.rpc.DetectPersonInImgResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 personid_;
  ::google::protobuf::int32 top_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 bottom_;
  ::google::protobuf::int32 left_;
  mutable int _cached_size_;
  friend struct ::protobuf_vrs_2eproto::TableStruct;
  friend void ::protobuf_vrs_2eproto::InitDefaultsDetectPersonInImgResultImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectObjectInImgRequest

// string Path = 1;
inline void DetectObjectInImgRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DetectObjectInImgRequest::path() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgRequest.Path)
  return path_.GetNoArena();
}
inline void DetectObjectInImgRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgRequest.Path)
}
#if LANG_CXX11
inline void DetectObjectInImgRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vrs.rpc.DetectObjectInImgRequest.Path)
}
#endif
inline void DetectObjectInImgRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vrs.rpc.DetectObjectInImgRequest.Path)
}
inline void DetectObjectInImgRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vrs.rpc.DetectObjectInImgRequest.Path)
}
inline ::std::string* DetectObjectInImgRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:vrs.rpc.DetectObjectInImgRequest.Path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DetectObjectInImgRequest::release_path() {
  // @@protoc_insertion_point(field_release:vrs.rpc.DetectObjectInImgRequest.Path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DetectObjectInImgRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:vrs.rpc.DetectObjectInImgRequest.Path)
}

// -------------------------------------------------------------------

// DetectObjectInImgResult

// uint32 ClassID = 1;
inline void DetectObjectInImgResult::clear_classid() {
  classid_ = 0u;
}
inline ::google::protobuf::uint32 DetectObjectInImgResult::classid() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgResult.ClassID)
  return classid_;
}
inline void DetectObjectInImgResult::set_classid(::google::protobuf::uint32 value) {
  
  classid_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgResult.ClassID)
}

// string ClassName = 2;
inline void DetectObjectInImgResult::clear_classname() {
  classname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DetectObjectInImgResult::classname() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgResult.ClassName)
  return classname_.GetNoArena();
}
inline void DetectObjectInImgResult::set_classname(const ::std::string& value) {
  
  classname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgResult.ClassName)
}
#if LANG_CXX11
inline void DetectObjectInImgResult::set_classname(::std::string&& value) {
  
  classname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vrs.rpc.DetectObjectInImgResult.ClassName)
}
#endif
inline void DetectObjectInImgResult::set_classname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  classname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vrs.rpc.DetectObjectInImgResult.ClassName)
}
inline void DetectObjectInImgResult::set_classname(const char* value, size_t size) {
  
  classname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vrs.rpc.DetectObjectInImgResult.ClassName)
}
inline ::std::string* DetectObjectInImgResult::mutable_classname() {
  
  // @@protoc_insertion_point(field_mutable:vrs.rpc.DetectObjectInImgResult.ClassName)
  return classname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DetectObjectInImgResult::release_classname() {
  // @@protoc_insertion_point(field_release:vrs.rpc.DetectObjectInImgResult.ClassName)
  
  return classname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DetectObjectInImgResult::set_allocated_classname(::std::string* classname) {
  if (classname != NULL) {
    
  } else {
    
  }
  classname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classname);
  // @@protoc_insertion_point(field_set_allocated:vrs.rpc.DetectObjectInImgResult.ClassName)
}

// float Prob = 3;
inline void DetectObjectInImgResult::clear_prob() {
  prob_ = 0;
}
inline float DetectObjectInImgResult::prob() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgResult.Prob)
  return prob_;
}
inline void DetectObjectInImgResult::set_prob(float value) {
  
  prob_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgResult.Prob)
}

// int32 Top = 4;
inline void DetectObjectInImgResult::clear_top() {
  top_ = 0;
}
inline ::google::protobuf::int32 DetectObjectInImgResult::top() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgResult.Top)
  return top_;
}
inline void DetectObjectInImgResult::set_top(::google::protobuf::int32 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgResult.Top)
}

// int32 Left = 5;
inline void DetectObjectInImgResult::clear_left() {
  left_ = 0;
}
inline ::google::protobuf::int32 DetectObjectInImgResult::left() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgResult.Left)
  return left_;
}
inline void DetectObjectInImgResult::set_left(::google::protobuf::int32 value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgResult.Left)
}

// int32 Width = 6;
inline void DetectObjectInImgResult::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 DetectObjectInImgResult::width() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgResult.Width)
  return width_;
}
inline void DetectObjectInImgResult::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgResult.Width)
}

// int32 Height = 7;
inline void DetectObjectInImgResult::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 DetectObjectInImgResult::height() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectObjectInImgResult.Height)
  return height_;
}
inline void DetectObjectInImgResult::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectObjectInImgResult.Height)
}

// -------------------------------------------------------------------

// DetectPersonInImgRequest

// string Path = 1;
inline void DetectPersonInImgRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DetectPersonInImgRequest::path() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectPersonInImgRequest.Path)
  return path_.GetNoArena();
}
inline void DetectPersonInImgRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectPersonInImgRequest.Path)
}
#if LANG_CXX11
inline void DetectPersonInImgRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vrs.rpc.DetectPersonInImgRequest.Path)
}
#endif
inline void DetectPersonInImgRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vrs.rpc.DetectPersonInImgRequest.Path)
}
inline void DetectPersonInImgRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vrs.rpc.DetectPersonInImgRequest.Path)
}
inline ::std::string* DetectPersonInImgRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:vrs.rpc.DetectPersonInImgRequest.Path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DetectPersonInImgRequest::release_path() {
  // @@protoc_insertion_point(field_release:vrs.rpc.DetectPersonInImgRequest.Path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DetectPersonInImgRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:vrs.rpc.DetectPersonInImgRequest.Path)
}

// -------------------------------------------------------------------

// DetectPersonsRequest

// uint32 VideoID = 1;
inline void DetectPersonsRequest::clear_videoid() {
  videoid_ = 0u;
}
inline ::google::protobuf::uint32 DetectPersonsRequest::videoid() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectPersonsRequest.VideoID)
  return videoid_;
}
inline void DetectPersonsRequest::set_videoid(::google::protobuf::uint32 value) {
  
  videoid_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectPersonsRequest.VideoID)
}

// -------------------------------------------------------------------

// SearchRequest

// string ImgPath = 1;
inline void SearchRequest::clear_imgpath() {
  imgpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchRequest::imgpath() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.SearchRequest.ImgPath)
  return imgpath_.GetNoArena();
}
inline void SearchRequest::set_imgpath(const ::std::string& value) {
  
  imgpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vrs.rpc.SearchRequest.ImgPath)
}
#if LANG_CXX11
inline void SearchRequest::set_imgpath(::std::string&& value) {
  
  imgpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vrs.rpc.SearchRequest.ImgPath)
}
#endif
inline void SearchRequest::set_imgpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imgpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vrs.rpc.SearchRequest.ImgPath)
}
inline void SearchRequest::set_imgpath(const char* value, size_t size) {
  
  imgpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vrs.rpc.SearchRequest.ImgPath)
}
inline ::std::string* SearchRequest::mutable_imgpath() {
  
  // @@protoc_insertion_point(field_mutable:vrs.rpc.SearchRequest.ImgPath)
  return imgpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchRequest::release_imgpath() {
  // @@protoc_insertion_point(field_release:vrs.rpc.SearchRequest.ImgPath)
  
  return imgpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchRequest::set_allocated_imgpath(::std::string* imgpath) {
  if (imgpath != NULL) {
    
  } else {
    
  }
  imgpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imgpath);
  // @@protoc_insertion_point(field_set_allocated:vrs.rpc.SearchRequest.ImgPath)
}

// -------------------------------------------------------------------

// SearchResult

// float Score = 1;
inline void SearchResult::clear_score() {
  score_ = 0;
}
inline float SearchResult::score() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.SearchResult.Score)
  return score_;
}
inline void SearchResult::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.SearchResult.Score)
}

// uint64 FrameID = 2;
inline void SearchResult::clear_frameid() {
  frameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SearchResult::frameid() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.SearchResult.FrameID)
  return frameid_;
}
inline void SearchResult::set_frameid(::google::protobuf::uint64 value) {
  
  frameid_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.SearchResult.FrameID)
}

// -------------------------------------------------------------------

// ProcessVideoRequest

// uint32 VideoID = 1;
inline void ProcessVideoRequest::clear_videoid() {
  videoid_ = 0u;
}
inline ::google::protobuf::uint32 ProcessVideoRequest::videoid() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.ProcessVideoRequest.VideoID)
  return videoid_;
}
inline void ProcessVideoRequest::set_videoid(::google::protobuf::uint32 value) {
  
  videoid_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.ProcessVideoRequest.VideoID)
}

// -------------------------------------------------------------------

// Result

// uint32 Code = 1;
inline void Result::clear_code() {
  code_ = 0u;
}
inline ::google::protobuf::uint32 Result::code() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.Result.Code)
  return code_;
}
inline void Result::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.Result.Code)
}

// string Msg = 2;
inline void Result::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Result::msg() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.Result.Msg)
  return msg_.GetNoArena();
}
inline void Result::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vrs.rpc.Result.Msg)
}
#if LANG_CXX11
inline void Result::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vrs.rpc.Result.Msg)
}
#endif
inline void Result::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vrs.rpc.Result.Msg)
}
inline void Result::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vrs.rpc.Result.Msg)
}
inline ::std::string* Result::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:vrs.rpc.Result.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Result::release_msg() {
  // @@protoc_insertion_point(field_release:vrs.rpc.Result.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Result::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:vrs.rpc.Result.Msg)
}

// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// DetectPersonInImgResult

// uint32 PersonID = 1;
inline void DetectPersonInImgResult::clear_personid() {
  personid_ = 0u;
}
inline ::google::protobuf::uint32 DetectPersonInImgResult::personid() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectPersonInImgResult.PersonID)
  return personid_;
}
inline void DetectPersonInImgResult::set_personid(::google::protobuf::uint32 value) {
  
  personid_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectPersonInImgResult.PersonID)
}

// int32 Top = 2;
inline void DetectPersonInImgResult::clear_top() {
  top_ = 0;
}
inline ::google::protobuf::int32 DetectPersonInImgResult::top() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectPersonInImgResult.Top)
  return top_;
}
inline void DetectPersonInImgResult::set_top(::google::protobuf::int32 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectPersonInImgResult.Top)
}

// int32 Right = 3;
inline void DetectPersonInImgResult::clear_right() {
  right_ = 0;
}
inline ::google::protobuf::int32 DetectPersonInImgResult::right() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectPersonInImgResult.Right)
  return right_;
}
inline void DetectPersonInImgResult::set_right(::google::protobuf::int32 value) {
  
  right_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectPersonInImgResult.Right)
}

// int32 Bottom = 4;
inline void DetectPersonInImgResult::clear_bottom() {
  bottom_ = 0;
}
inline ::google::protobuf::int32 DetectPersonInImgResult::bottom() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectPersonInImgResult.Bottom)
  return bottom_;
}
inline void DetectPersonInImgResult::set_bottom(::google::protobuf::int32 value) {
  
  bottom_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectPersonInImgResult.Bottom)
}

// int32 Left = 5;
inline void DetectPersonInImgResult::clear_left() {
  left_ = 0;
}
inline ::google::protobuf::int32 DetectPersonInImgResult::left() const {
  // @@protoc_insertion_point(field_get:vrs.rpc.DetectPersonInImgResult.Left)
  return left_;
}
inline void DetectPersonInImgResult::set_left(::google::protobuf::int32 value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:vrs.rpc.DetectPersonInImgResult.Left)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc
}  // namespace vrs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vrs_2eproto__INCLUDED
