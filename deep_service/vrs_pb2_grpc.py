# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import vrs_pb2 as vrs__pb2


class VrsRpcStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Search = channel.unary_stream(
        '/vrs.rpc.VrsRpc/Search',
        request_serializer=vrs__pb2.SearchRequest.SerializeToString,
        response_deserializer=vrs__pb2.SearchResult.FromString,
        )
    self.ProcessVideo = channel.unary_unary(
        '/vrs.rpc.VrsRpc/ProcessVideo',
        request_serializer=vrs__pb2.ProcessVideoRequest.SerializeToString,
        response_deserializer=vrs__pb2.Result.FromString,
        )
    self.Merge = channel.unary_unary(
        '/vrs.rpc.VrsRpc/Merge',
        request_serializer=vrs__pb2.Empty.SerializeToString,
        response_deserializer=vrs__pb2.Result.FromString,
        )


class VrsRpcServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Search(self, request, context):
    """根据路径进行检索，并给出评分
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProcessVideo(self, request, context):
    """视频处理请求
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Merge(self, request, context):
    """合并各个视频的索引为全局索引
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VrsRpcServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Search': grpc.unary_stream_rpc_method_handler(
          servicer.Search,
          request_deserializer=vrs__pb2.SearchRequest.FromString,
          response_serializer=vrs__pb2.SearchResult.SerializeToString,
      ),
      'ProcessVideo': grpc.unary_unary_rpc_method_handler(
          servicer.ProcessVideo,
          request_deserializer=vrs__pb2.ProcessVideoRequest.FromString,
          response_serializer=vrs__pb2.Result.SerializeToString,
      ),
      'Merge': grpc.unary_unary_rpc_method_handler(
          servicer.Merge,
          request_deserializer=vrs__pb2.Empty.FromString,
          response_serializer=vrs__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vrs.rpc.VrsRpc', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class FaceRpcStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BuildClassifer = channel.unary_unary(
        '/vrs.rpc.FaceRpc/BuildClassifer',
        request_serializer=vrs__pb2.Empty.SerializeToString,
        response_deserializer=vrs__pb2.Result.FromString,
        )
    self.DetectPersonsInVideo = channel.unary_unary(
        '/vrs.rpc.FaceRpc/DetectPersonsInVideo',
        request_serializer=vrs__pb2.DetectPersonsRequest.SerializeToString,
        response_deserializer=vrs__pb2.Result.FromString,
        )
    self.DetectPersonInImg = channel.unary_stream(
        '/vrs.rpc.FaceRpc/DetectPersonInImg',
        request_serializer=vrs__pb2.DetectPersonInImgRequest.SerializeToString,
        response_deserializer=vrs__pb2.DetectPersonInImgResult.FromString,
        )


class FaceRpcServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def BuildClassifer(self, request, context):
    """根据标注数据建立人脸分类器
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DetectPersonsInVideo(self, request, context):
    """在视频中检测人脸数据
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DetectPersonInImg(self, request, context):
    """基于图像的人脸检测
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FaceRpcServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BuildClassifer': grpc.unary_unary_rpc_method_handler(
          servicer.BuildClassifer,
          request_deserializer=vrs__pb2.Empty.FromString,
          response_serializer=vrs__pb2.Result.SerializeToString,
      ),
      'DetectPersonsInVideo': grpc.unary_unary_rpc_method_handler(
          servicer.DetectPersonsInVideo,
          request_deserializer=vrs__pb2.DetectPersonsRequest.FromString,
          response_serializer=vrs__pb2.Result.SerializeToString,
      ),
      'DetectPersonInImg': grpc.unary_stream_rpc_method_handler(
          servicer.DetectPersonInImg,
          request_deserializer=vrs__pb2.DetectPersonInImgRequest.FromString,
          response_serializer=vrs__pb2.DetectPersonInImgResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vrs.rpc.FaceRpc', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ObjectRpcStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DetectObjectInImg = channel.unary_stream(
        '/vrs.rpc.ObjectRpc/DetectObjectInImg',
        request_serializer=vrs__pb2.DetectObjectInImgRequest.SerializeToString,
        response_deserializer=vrs__pb2.DetectObjectInImgResult.FromString,
        )


class ObjectRpcServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DetectObjectInImg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ObjectRpcServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DetectObjectInImg': grpc.unary_stream_rpc_method_handler(
          servicer.DetectObjectInImg,
          request_deserializer=vrs__pb2.DetectObjectInImgRequest.FromString,
          response_serializer=vrs__pb2.DetectObjectInImgResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vrs.rpc.ObjectRpc', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
